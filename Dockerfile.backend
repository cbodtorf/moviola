# Dockerfile.backend - for backend project

# --- -base- ---
FROM node:lts-alpine as base
RUN apk add --no-cache libc6-compat
ENV YARN_CACHE_FOLDER=./yarn_cache
# Create and change to the app directory.
WORKDIR /root/app

# Copy application dependency manifests to the container image.
COPY package.json ./yarn.* ./
RUN yarn install --frozen-lockfile --omit=dev --ignore-scripts

# --- -build- ---
FROM base as build
# Copy local code to the container image.
COPY . ./
ENV NODE_ENV=production

# Build the app
RUN yarn build:be:prod --verbose
RUN ls -lah dist/apps/backend

# --- -deploy- ---
FROM build as deploy
WORKDIR /root/app/dist/apps/backend
# COPY --from=build /root/app/dist/apps/backend .
COPY --from=base /root/app/node_modules ./node_modules

RUN yarn install --production --omit=dev --ignore-scripts
# dependencies that fastify needs
RUN yarn add reflect-metadata tslib rxjs

# --- --- ---
# CMD ls -las /root/app && tail -f /dev/null
RUN ls -lah /root/app/dist/apps/backend

# Run the web service on container startup.
CMD ["node", "./main.js"]